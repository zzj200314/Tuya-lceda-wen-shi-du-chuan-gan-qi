C51 COMPILER V9.60.0.0   USER_I2C                                                          02/18/2021 10:10:07 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE USER_I2C
OBJECT MODULE PLACED IN .\Obj\User_I2C.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE src\User_I2C.c LARGE OPTIMIZE(9,SPEED) BROWSE INCDIR(.\;.\src;.\mcu_sdk)
                    - DEBUG OBJECTEXTEND PRINT(.\List\User_I2C.lst) TABS(2) OBJECT(.\Obj\User_I2C.obj)

line level    source

   1          /******************************************************************************
   2          文件名称: I2C.c
   3          文件标识: STC8A8K64S4A12
   4          摘    要: I2C硬件操作函数
   5          当前版本: V1.0  
   6          完成日期: 2021.01.24
   7          *******************************************************************************/
   8          #define USER_I2C_GLOBALS
   9          #include "include.h"
  10          
  11          
  12          
  13          #define Interrupt //中断方法
  14          //#define Query     //查询方法
  15          
  16          /*****************************************************************************
  17          函数名称 : I2C_init
  18          功能描述 : I2C初始化
  19          输入参数 : 无
  20          返回参数 : 无
  21          使用说明 : 无
  22          *****************************************************************************/
  23          void I2C_init()
  24          {
  25   1        P_SW2 = 0x80;
  26   1      //P_SW2 |= 0x00;           //SCL/P1.5, SDA/P1.4
  27   1        P_SW2 |= 0x10;           //SCL_2/P2.5, SDA_2/P2.4
  28   1      //P_SW2 |= 0x20;           //SCL_3/P7.7, SDA_3/P7.6
  29   1      //P_SW2 |= 0x30;           //SCL_4/P3.2, SDA_4/P3.3
  30   1        I2CCFG = 0xC0|MSSPEED;   //使能I2C主机模式
  31   1        I2CMSST = 0x00;
  32   1      }
  33          
  34          #ifdef Interrupt
  35          bit busy1;
  36          
  37          /*****************************************************************************
  38          函数名称 : I2C_Isr
  39          功能描述 : I2C中断处理函数
  40          输入参数 : 无
  41          返回参数 : 无
  42          使用说明 : 无
  43          *****************************************************************************/
  44          void I2C_Isr() interrupt 24
  45          {
  46   1          char store;
  47   1          
  48   1          store = P_SW2;
  49   1          P_SW2 |= 0x80;
  50   1          if (I2CMSST & 0x40)
  51   1          {
  52   2              I2CMSST &= ~0x40;                       //清中断标志
  53   2              busy1 = 0;
  54   2          }
C51 COMPILER V9.60.0.0   USER_I2C                                                          02/18/2021 10:10:07 PAGE 2   

  55   1          P_SW2 = store;
  56   1      }
  57          /*****************************************************************************
  58          函数名称 : Start
  59          功能描述 : 发送START命令
  60          输入参数 : 无
  61          返回参数 : 无
  62          使用说明 : 无
  63          *****************************************************************************/
  64          void Start()  //发送START命令
  65          {
  66   1        busy1 = 1;
  67   1        I2CMSCR = 0x81;                           
  68   1        while (busy1);
  69   1      }
  70          /*****************************************************************************
  71          函数名称 : SendData
  72          功能描述 : 发送一个字节
  73          输入参数 : dat:待发送数据
  74          返回参数 : 无
  75          使用说明 : 无
  76          *****************************************************************************/
  77          void SendData(char dat)  //发送一个字节
  78          {
  79   1        I2CTXD = dat;        //写数据到数据缓冲区                              
  80   1        busy1 = 1;
  81   1        I2CMSCR = 0x82;        //发送SEND命令                       
  82   1        while (busy1);
  83   1      }
  84          /*****************************************************************************
  85          函数名称 : RecvACK
  86          功能描述 : 发送并检查应答
  87          输入参数 : 无
  88          返回参数 : 无
  89          使用说明 : 无
  90          *****************************************************************************/
  91          /*void RecvACK()       //发送并检查应答
  92          {
  93            busy1 = 1;
  94            I2CMSCR = 0x83;      //发送读ACK命令                             
  95            while (busy1);
  96            //return ACK;
  97          }*/
  98          /*****************************************************************************
  99          函数名称 : RecvData
 100          功能描述 : 接收一个字节
 101          输入参数 : 无
 102          返回参数 : 无
 103          使用说明 : 无
 104          *****************************************************************************/
 105          char RecvData() //接收一个字节
 106          {
 107   1        busy1 = 1;
 108   1        I2CMSCR = 0x84;    //发送RECV命令
 109   1        while (busy1);
 110   1        return I2CRXD;
 111   1      }
 112          /*****************************************************************************
 113          函数名称 : SendACK
 114          功能描述 : 发送应答位
 115          输入参数 : 无
 116          返回参数 : 无
C51 COMPILER V9.60.0.0   USER_I2C                                                          02/18/2021 10:10:07 PAGE 3   

 117          使用说明 : 无
 118          *****************************************************************************/
 119          void SendACK() //发送应答位
 120          {
 121   1        I2CMSST = 0x00;           //设置ACK信号
 122   1        busy1 = 1;
 123   1        I2CMSCR = 0x85;           //发送ACK命令
 124   1        while (busy1);
 125   1      }
 126          /*****************************************************************************
 127          函数名称 : SendNAK
 128          功能描述 : 发送非应答位
 129          输入参数 : 无
 130          返回参数 : 无
 131          使用说明 : 无
 132          *****************************************************************************/
 133          /*void SendNAK()  //发送非应答位
 134          {
 135            I2CMSST = 0x01;       //设置NAK信号
 136            busy1 = 1;
 137            I2CMSCR = 0x85;       //发送NAK信号
 138            while (busy1);
 139          }*/
 140          /*****************************************************************************
 141          函数名称 : Stop
 142          功能描述 : 发送停止位
 143          输入参数 : 无
 144          返回参数 : 无
 145          使用说明 : 无
 146          *****************************************************************************/
 147          void Stop() //发送停止位
 148          {
 149   1        busy1 = 1;
 150   1        I2CMSCR = 0x86;     //发送STOP命令
 151   1        while (busy1);
 152   1      }
 153          
 154          
 155          
 156          #elif defined(Query)
              
              /*****************************************************************************
              函数名称 : Wait
              功能描述 : 检测状态
              输入参数 : 无
              返回参数 : 无
              使用说明 : 无
              *****************************************************************************/
              void Wait()
              {
                while(!(I2CMSST&0X40));
                I2CMSST &= ~0X40;
              }
              /*****************************************************************************
              函数名称 : Start
              功能描述 : 发送START命令
              输入参数 : 无
              返回参数 : 无
              使用说明 : 无
              *****************************************************************************/
              void Start()  //发送START命令
              {
C51 COMPILER V9.60.0.0   USER_I2C                                                          02/18/2021 10:10:07 PAGE 4   

                I2CMSCR = 0x01;                           
                Wait();
              }
              /*****************************************************************************
              函数名称 : SendData
              功能描述 : 发送一个字节
              输入参数 : dat:待发送数据
              返回参数 : 无
              使用说明 : 无
              *****************************************************************************/
              void SendData(char dat)  //发送一个字节
              {
                I2CTXD = dat;        //写数据到数据缓冲区
                I2CMSCR = 0x02;        //发送SEND命令                       
                Wait();
              }
              /*****************************************************************************
              函数名称 : RecvACK
              功能描述 : 发送并检查应答
              输入参数 : 无
              返回参数 : 无
              使用说明 : 无
              *****************************************************************************/
              /*void RecvACK()       //发送并检查应答
              {
                I2CMSCR = 0x03;      //发送读ACK命令                             
                Wait();
              }*/
              /*****************************************************************************
              函数名称 : RecvData
              功能描述 : 接收一个字节
              输入参数 : 无
              返回参数 : 无
              使用说明 : 无
              *****************************************************************************/
              char RecvData() //接收一个字节
              {
                I2CMSCR = 0x04;    //发送RECV命令
                Wait();
                return I2CRXD;
              }
              /*****************************************************************************
              函数名称 : SendACK
              功能描述 : 发送应答位
              输入参数 : 无
              返回参数 : 无
              使用说明 : 无
              *****************************************************************************/
              void SendACK() //发送应答位
              {
                I2CMSST = 0x00;           //设置ACK信号
                I2CMSCR = 0x05;           //发送ACK命令
                Wait();
              }
              /*****************************************************************************
              函数名称 : SendNAK
              功能描述 : 发送非应答位
              输入参数 : 无
              返回参数 : 无
              使用说明 : 无
              *****************************************************************************/
              /*void SendNAK()  //发送非应答位
C51 COMPILER V9.60.0.0   USER_I2C                                                          02/18/2021 10:10:07 PAGE 5   

              {
                I2CMSST = 0x01;       //设置NAK信号
                I2CMSCR = 0x05;       //发送NAK信号
                Wait();
              }*/
              /*****************************************************************************
              函数名称 : Stop
              功能描述 : 发送停止位
              输入参数 : 无
              返回参数 : 无
              使用说明 : 无
              *****************************************************************************/
              void Stop() //发送停止位
              {
                I2CMSCR = 0x86;     //发送STOP命令
                Wait();
              }
              #endif
 259          
 260          /*****************************************************************************
 261          函数名称 : WriteCmd
 262          功能描述 : 写指令函数
 263          输入参数 : command：指令
 264          返回参数 : 无
 265          使用说明 : 无
 266          *****************************************************************************/
 267          void WriteCmd(uint8_t command ,uint8_t addr)
 268          {
 269   1        Start();
 270   1        SendData(addr);//OLED地址
 271   1        SendACK();
 272   1        SendData(0x00);//寄存器地址
 273   1        SendACK();
 274   1        SendData(command);
 275   1        SendACK();
 276   1        Stop();
 277   1      }
 278          /*****************************************************************************
 279          函数名称 : WriteDat
 280          功能描述 : 写数据函数
 281          输入参数 : Data：数据
 282          返回参数 : 无
 283          使用说明 : 无
 284          *****************************************************************************/
 285          void WriteDat(uint8_t Data,uint8_t addr)
 286          {
 287   1        Start();
 288   1        SendData(addr);                        //D/C#=0; R/W#=0
 289   1        SendACK();       
 290   1        SendData(0x40);                        //write data
 291   1        SendACK();       
 292   1        SendData(Data);
 293   1        SendACK();       
 294   1        Stop();
 295   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    183    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   USER_I2C                                                          02/18/2021 10:10:07 PAGE 6   

   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
