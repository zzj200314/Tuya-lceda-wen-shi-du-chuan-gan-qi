C51 COMPILER V9.60.0.0   USER_OLED                                                         02/18/2021 10:10:07 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE USER_OLED
OBJECT MODULE PLACED IN .\Obj\User_OLED.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE src\User_OLED.c LARGE OPTIMIZE(9,SPEED) BROWSE INCDIR(.\;.\src;.\mcu_sdk
                    -) DEBUG OBJECTEXTEND PRINT(.\List\User_OLED.lst) TABS(2) OBJECT(.\Obj\User_OLED.obj)

line level    source

   1          /******************************************************************************
   2          文件名称: OLED.c
   3          文件标识: STC8A8K64S4A12
   4          摘    要: OLED操作函数
   5          当前版本: V1.0  
   6          完成日期: 2021.01.25
   7          *******************************************************************************/
   8          #define USER_OLED_GLOBALS
   9          #include "include.h"
  10          
  11          
  12          
  13          /*****************************************************************************
  14          函数名称 : OLED_WR_Byte
  15          功能描述 : OLED写一字节
  16          输入参数 : dat：要写入的数据 cmd=1写指令，cmd=0写数据
  17          返回参数 : 无
  18          使用说明 : 无
  19          *****************************************************************************/
  20          void OLED_WR_Byte(unsigned dat,unsigned cmd)
  21          {
  22   1        if(cmd==1)
  23   1        {
  24   2          WriteCmd(dat,OLED_Address);
  25   2        }
  26   1        else
  27   1        {
  28   2          WriteDat(dat,OLED_Address);
  29   2        }
  30   1      }
  31          /*****************************************************************************
  32          函数名称 : OLED_OLED_WR_Byte_con
  33          功能描述 : 连续写入count个数据
  34          输入参数 : dat[]：要写入的数据  count写入的个数
  35          返回参数 : 无
  36          使用说明 : 无
  37          *****************************************************************************/ 
  38          void OLED_OLED_WR_Byte_con(uint8_t dat[], uint16_t count)//写入连续数据count个
  39          {
  40   1        int i = 0;
  41   1        Start();
  42   1        SendData(OLED_Address);                        //D/C#=0; R/W#=0
  43   1        SendACK();       
  44   1        SendData(0x40);                        //write data
  45   1        SendACK();       
  46   1        for(i = 0 ;i < count ;i++)
  47   1        {
  48   2          SendData(dat[i]);
  49   2          SendACK();
  50   2        }
  51   1        Stop();
  52   1      }
  53          /*****************************************************************************
  54          函数名称 : OLED_OLED_WR_Byte_same
C51 COMPILER V9.60.0.0   USER_OLED                                                         02/18/2021 10:10:07 PAGE 2   

  55          功能描述 : 连续写入count个相同的数据
  56          输入参数 : dat：要写入的数据  count：重复次数
  57          返回参数 : 无
  58          使用说明 : 无
  59          *****************************************************************************/ 
  60          /*void OLED_OLED_WR_Byte_same(uint8_t dat, uint16_t count)//写入连续数据count个
  61          {
  62            int i = 0;
  63            Start();
  64            SendData(OLED_Address);                        //D/C#=0; R/W#=0
  65            SendACK();       
  66            SendData(0x40);                        //write data
  67            SendACK();       
  68            for(i = 0 ;i < count ;i++)
  69            {
  70              SendData(dat);
  71              SendACK();
  72            }
  73            Stop();
  74          }*/
  75          /*****************************************************************************
  76          函数名称 : OLED_Init
  77          功能描述 : OLED初始化
  78          输入参数 : 无
  79          返回参数 : 无
  80          使用说明 : 无
  81          *****************************************************************************/
  82          void OLED_Init()
  83          {
  84   1        OLED_WR_Byte(0xAE,1);//--display off
  85   1        OLED_WR_Byte(0x00,1);//--set low column address
  86   1        OLED_WR_Byte(0x10,1);//--set high column address
  87   1        OLED_WR_Byte(0x40,1);//--set display start line
  88   1        OLED_WR_Byte(0xB0,1);//--set page address
  89   1        OLED_WR_Byte(0x81,1);//--contract control
  90   1        OLED_WR_Byte(0xFF,1);//--Set SEG Output Current Brightness
  91   1        OLED_WR_Byte(0xA1,1);//--set segment remap     0xa0左右反置 0xa1正常
  92   1        OLED_WR_Byte(0xA6,1);//--normal / reverse
  93   1        OLED_WR_Byte(0xA8,1);//--multiplex ratio
  94   1        OLED_WR_Byte(0x3F,1);//--duty = 1/64
  95   1        OLED_WR_Byte(0xC8,1);//--Com scan direction   0xc0上下反置 0xc8正常
  96   1        OLED_WR_Byte(0xD3,1);//--set display offset
  97   1        OLED_WR_Byte(0x00,1);//
  98   1        OLED_WR_Byte(0xD5,1);//--set osc division
  99   1        OLED_WR_Byte(0x80,1);//--set divide ratio, Set Clock as 100 Frames/Sec
 100   1        OLED_WR_Byte(0xD9,1);//--set pre-charge period
 101   1        OLED_WR_Byte(0xF1,1);//--Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 102   1        OLED_WR_Byte(0xDA,1);//--set COM pins
 103   1        OLED_WR_Byte(0x12,1);//
 104   1        OLED_WR_Byte(0xDB,1);//--set vcomh
 105   1      //OLED_WR_Byte(0x40,1);//--Set VCOM Deselect Level
 106   1        OLED_WR_Byte(0x30,1);//
 107   1        OLED_WR_Byte(0x8D,1);//--set charge pump disable
 108   1        OLED_WR_Byte(0x14,1);//--set(0x10) disable
 109   1        OLED_WR_Byte(0xaf,1);//--turn on oled panel
 110   1      }
 111          /*****************************************************************************
 112          函数名称 : OLED_Clear
 113          功能描述 : OLED清屏
 114          输入参数 : 无
 115          返回参数 : 无
 116          使用说明 : 无
C51 COMPILER V9.60.0.0   USER_OLED                                                         02/18/2021 10:10:07 PAGE 3   

 117          *****************************************************************************/
 118          void OLED_Clear(void)
 119          {
 120   1        uint8_t i,n;              //定义变量
 121   1        for(i=0; i<8; i++)
 122   1        {
 123   2          OLED_WR_Byte(0xb0+i,1); //设置页地址（0~7）
 124   2          OLED_WR_Byte(0x00,1);   //设置显示位置―列低地址
 125   2          OLED_WR_Byte(0x10,1);   //设置显示位置―列高地址
 126   2          for(n=0; n<128; n++)OLED_WR_Byte(0x00,0); //写0x00到屏幕寄存器上
 127   2        }
 128   1      }
 129          /*****************************************************************************
 130          函数名称 : OLED_SetPos
 131          功能描述 : 设置开始的光标位置
 132          输入参数 : x，y：位置
 133          返回参数 : 无
 134          使用说明 : 无
 135          *****************************************************************************/
 136          void OLED_SetPos(uint8_t x, uint8_t y)
 137          {
 138   1        OLED_WR_Byte(0xb0+y,1);             //写入页地址
 139   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,1); //写入列低地址
 140   1        OLED_WR_Byte(x&0x0f,1);             //写入列高地址
 141   1      }
 142          /*****************************************************************************
 143          函数名称 : OLED_ON
 144          功能描述 : 将OLED从休眠中唤醒
 145          输入参数 : 无
 146          返回参数 : 无
 147          使用说明 : 无
 148          *****************************************************************************/ 
 149          /*void OLED_ON(void)
 150          {
 151            OLED_WR_Byte(0X8D,1);  //设置电荷泵
 152            OLED_WR_Byte(0X14,1);  //开启电荷泵
 153            OLED_WR_Byte(0XAF,1);  //OLED唤醒
 154          }*/
 155          /*****************************************************************************
 156          函数名称 : OLED_OFF
 157          功能描述 : 让OLED休眠 -- 休眠模式下,OLED功耗不到10uA
 158          输入参数 : 无
 159          返回参数 : 无
 160          使用说明 : 无
 161          *****************************************************************************/ 
 162          /*void OLED_OFF(void)
 163          {
 164            OLED_WR_Byte(0X8D,1);  //设置电荷泵
 165            OLED_WR_Byte(0X10,1);  //关闭电荷泵
 166            OLED_WR_Byte(0XAE,1);  //OLED休眠
 167          }*/
 168          /*****************************************************************************
 169          函数名称 : OLED_ShowChar
 170          功能描述 : 显示6*8或8*16一个标准ASCII字符串
 171          输入参数 : x：起始列
 172                     y：起始页，TextSize = 16占两页；TextSize = 8占1页
 173                     ch：字符
 174          返回参数 : 无
 175          使用说明 : 无
 176          *****************************************************************************/ 
 177          void OLED_ShowChar(uint8_t x, uint8_t y, uint8_t ch, uint8_t TextSize)
 178          {
C51 COMPILER V9.60.0.0   USER_OLED                                                         02/18/2021 10:10:07 PAGE 4   

 179   1        uint8_t c=0,i=0;
 180   1        c = ch-' ';//获取字符的偏移量 
 181   1        if(x>Max_Column-1)//如果列书超出了范围，就从下2页的第0列开始
 182   1        {
 183   2          x=0;
 184   2          y=y+2;
 185   2        }
 186   1        if(TextSize==16)//字符大小如果为 2 = 8*16
 187   1        {
 188   2          OLED_SetPos(x,y);//从x y 开始画点
 189   2          for(i=0; i<8; i++)//循环8次 占8列
 190   2            OLED_WR_Byte(F8X16[c*16+i],0);//找出字符 c 的数组位置，先在第一页把列画完
 191   2          OLED_SetPos(x,y+1);//页数加1
 192   2          for(i=0; i<8; i++)//循环8次
 193   2            OLED_WR_Byte(F8X16[c*16+i+8],0);//把第二页的列数画完
 194   2        }
 195   1        else
 196   1        {//字符大小为 6 = 6*8
 197   2          OLED_SetPos(x,y);//一页就可以画完
 198   2          for(i=0; i<6; i++)//循环6次 ，占6列
 199   2            OLED_WR_Byte(F6x8[c][i],0);//把字符画完
 200   2        }
 201   1      }
 202          /*****************************************************************************
 203          函数名称 : OLED_ShowStr
 204          功能描述 : 显示字符串
 205          输入参数 : x：起始列
 206                     y：起始页
 207                     *ch：第一个字符首地址
 208                     TextSize：字符大小(1:6*8 ; 2:8*16)
 209          返回参数 : 无
 210          使用说明 : 无
 211          *****************************************************************************/ 
 212          void OLED_ShowStr(uint8_t x, uint8_t y, uint8_t *ch, uint8_t TextSize)
 213          {
 214   1        uint8_t j = 0;//定义变量
 215   1        while(ch[j] != '\0')//如果不是最后一个字符
 216   1        {   
 217   2          OLED_ShowChar(x,y,ch[j],TextSize);//显示字符
 218   2          if(TextSize==8)
 219   2          {
 220   3            x += 6;//列数加6 ，一个字符的列数占6
 221   3            if(x > 122)  //如果x超过128，切换页，从该页的第一列显示
 222   3            {
 223   4              x = 0;  
 224   4              y += 2;  
 225   4            }     
 226   3            j++;  //下一个字符
 227   3          }
 228   2          else
 229   2          {
 230   3            x += 8;//列数加8 ，一个字符的列数占8
 231   3            if(x > 120)  //如果x超过128，切换页，从该页的第一列显示
 232   3            {
 233   4              x = 0;  
 234   4              y += 2;  
 235   4            }     
 236   3            j++;  //下一个字符
 237   3          }
 238   2        }
 239   1      }
 240          /*****************************************************************************
C51 COMPILER V9.60.0.0   USER_OLED                                                         02/18/2021 10:10:07 PAGE 5   

 241          函数名称 : oled_pow
 242          功能描述 : 计算m^n
 243          输入参数 : m：输入的一个数   n：输入数的次方
 244          返回参数 : result：一个数的n次方
 245          使用说明 : 无
 246          *****************************************************************************/ 
 247          uint32_t oled_pow(uint8_t m,uint8_t n)
 248          {
 249   1        uint32_t result=1;   
 250   1        while(n--)result*=m;    
 251   1        return result;
 252   1      }         
 253          /*****************************************************************************
 254          函数名称 : OLED_ShowNum
 255          功能描述 : 在指定的位置，显示一个指定长度大小的数
 256          输入参数 : x：起始列
 257                     y：起始页
 258                     num：数字
 259                     len：数字的长度
 260                     TextSize：字符大小(1:6*8 ; 2:8*16)
 261          返回参数 : 无
 262          使用说明 : 无
 263          *****************************************************************************/ 
 264          void OLED_ShowNum(uint8_t x,uint8_t y,int num,uint8_t len,uint8_t TextSize)
 265          {           
 266   1        uint8_t i,t,temp;  //定义变量
 267   1        uint8_t enshow=0;   //定义变量
 268   1        if(TextSize==8)
 269   1          i = 6;
 270   1        else
 271   1          i = 8;
 272   1        if(num<0)  //要显示的数小于0
 273   1        {
 274   2          num = -num;
 275   2          OLED_ShowChar(x,y,'-',TextSize);
 276   2          for(t=0;t<len;t++)
 277   2          {
 278   3            temp=(num/oled_pow(10,len-t-1))%10;//取出输入数的每个位，由高到低
 279   3            if(enshow==0&&t<(len-1)) //enshow：是否为第一个数；t<(len-1)：判断是否为最后一个数
 280   3            {
 281   4              if(temp==0) //如果该数为0 
 282   4              {
 283   5                OLED_ShowChar(x+i*(t+1),y,' ',TextSize);//显示 0 ；x+(size2/2)*t根据字体大小偏移的列数（8）
 284   5                continue; //跳过剩下语句，继续重复循环（避免重复显示）
 285   5              }else enshow=1; 
 286   4            }
 287   3            OLED_ShowChar(x+i*(t+1),y,temp+'0',TextSize); //显示一个位；x+(size2/2)*t根据字体大小偏移的列数（8）
 288   3          }
 289   2        }
 290   1        else  //要显示的数大于0
 291   1        {
 292   2          for(t=0;t<len;t++)
 293   2          {
 294   3            temp=(num/oled_pow(10,len-t-1))%10;//取出输入数的每个位，由高到低
 295   3            if(enshow==0&&t<(len-1)) //enshow：是否为第一个数；t<(len-1)：判断是否为最后一个数
 296   3            {
 297   4              if(temp==0) //如果该数为0 
 298   4              {
 299   5                OLED_ShowChar(x+i*t,y,' ',TextSize);//显示 0 ；x+(size2/2)*t根据字体大小偏移的列数（8）
 300   5                continue; //跳过剩下语句，继续重复循环（避免重复显示）
 301   5              }else enshow=1; 
 302   4            }
C51 COMPILER V9.60.0.0   USER_OLED                                                         02/18/2021 10:10:07 PAGE 6   

 303   3            OLED_ShowChar(x+i*t,y,temp+'0',TextSize); //显示一个位；x+(size2/2)*t根据字体大小偏移的列数（8）
 304   3          }
 305   2        }
 306   1      } 
 307          /*****************************************************************************
 308          函数名称 : OLED_ShowCHinese
 309          功能描述 : 显示中文
 310          输入参数 : x：起始列，一个字占16列 y：起始页，一个字占两页 no：字体的序列号
 311          返回参数 : 无
 312          使用说明 : 无
 313          *****************************************************************************/ 
 314          void OLED_ShowCHinese(uint8_t x,uint8_t y,uint8_t no)
 315          {               
 316   1        uint8_t t,adder=0; //定义变量
 317   1        OLED_SetPos(x,y); //从 x y 开始画点，先画第一页
 318   1          for(t=0;t<16;t++) //循环16次，画第一页的16列
 319   1          {
 320   2              OLED_WR_Byte(Hzk[2*no][t],0);//画no在数组位置的第一页16列的点
 321   2              adder+=1; //数组地址加1
 322   2           }  
 323   1          OLED_SetPos(x,y+1); //画第二列
 324   1          for(t=0;t<16;t++)//循环16次，画第二页的16列
 325   1            { 
 326   2              OLED_WR_Byte(Hzk[2*no+1][t],0);//画no在数组位置的第二页16列的点
 327   2              adder+=1;//数组地址加1
 328   2            }         
 329   1      }
 330          
 331          /*****************************************************************************
 332          函数名称 : OLED_DrawBMP
 333          功能描述 : 显示图片
 334          输入参数 : x0：起始列地址（0~127）
 335                     y0：起始页地址（0~7）
 336                     x1：终止列地址（1~128）
 337                     y1：终止页地址（1~8）
 338                     BMP[]：存放图片代码的数组
 339          返回参数 : 无
 340          使用说明 : 无
 341          *****************************************************************************/ 
 342          void OLED_DrawBMP(uint8_t x0,uint8_t y0,uint8_t x1,uint8_t y1,uint8_t BMP[])
 343          {
 344   1        uint16_t j=0;  //定义变量
 345   1        uint8_t x,y;   //定义变量
 346   1       
 347   1        if(y1%8==0)    //判断终止页是否为8的整数倍
 348   1          y = y1/8;
 349   1        else
 350   1          y = y1/8 + 1;
 351   1        for(y=y0; y<y1; y++)   //从起始页开始，画到终止页
 352   1        {
 353   2          OLED_SetPos(x0,y);   //在页的起始列开始画
 354   2          for(x=x0; x<x1; x++) //画x1 - x0 列
 355   2          {
 356   3            OLED_WR_Byte(BMP[j++],0);//画图片的点
 357   3          }
 358   2        }
 359   1      }
 360          /*****************************************************************************
 361          函数名称 : OLED_ShowInt
 362          功能描述 : 
 363          输入参数 : 无
 364          返回参数 : 无
C51 COMPILER V9.60.0.0   USER_OLED                                                         02/18/2021 10:10:07 PAGE 7   

 365          使用说明 : 无
 366          *****************************************************************************/ 
 367          //****************功能描述： 显示6*8或8*16的5位整数   显示的坐标（x,y），y为页范围0～7********************
             -********
 368           
 369          /*例
 370          OLED_ShowInt(0,0,0,1);   //在(0,0)处，显示6*8的"0"
 371          OLED_ShowInt(5,4,12345,2);//在(5,4)处，显示8*16的"12345"
 372          */
 373          /*void OLED_ShowInt(uint8_t x, uint8_t y, int Data, uint8_t TextSize)
 374          {
 375            uint8_t temp;
 376            OLED_SetPos(x,y);
 377            switch(TextSize)
 378            {
 379            case 1:
 380            {
 381              if(Data<0)
 382              {
 383                OLED_ShowChar(x,y,'-',1);
 384                x+=6;
 385                Data=-Data;
 386              }
 387              //接下来要显示正数，清空上一次显示负数的个位
 388              //负数比正数多一个负号，额外占了一个显示位
 389              OLED_ShowChar(x+30,y,' ',1);
 390           
 391              temp=Data/10000;
 392              OLED_ShowChar(x,y,(temp+'0'),1);
 393           
 394              Data%=10000;
 395              temp=Data/1000;
 396              OLED_ShowChar(x+6,y,(temp+'0'),1);
 397           
 398              Data%=1000;
 399              temp=Data/100;
 400              OLED_ShowChar(x+12,y,(temp+'0'),1);
 401           
 402              Data%=100;
 403              temp=Data/10;
 404              OLED_ShowChar(x+18,y,(temp+'0'),1);
 405           
 406              Data%=10;
 407              temp=Data;
 408              OLED_ShowChar(x+24,y,(temp+'0'),1);
 409            }
 410            break;
 411            case 2:
 412            {
 413              if(Data<0)
 414              {
 415                OLED_ShowChar(x,y,'-',2);
 416                x+=8;
 417                Data=-Data;
 418              }
 419              //接下来要显示正数，清空上一次显示负数的个位
 420              //负数比正数多一个负号，额外占了一个显示位
 421              OLED_ShowChar(x+40,y,' ',2);
 422           
 423              temp=Data/10000;
 424              OLED_ShowChar(x,y,(temp+'0'),2);
 425           
C51 COMPILER V9.60.0.0   USER_OLED                                                         02/18/2021 10:10:07 PAGE 8   

 426              Data%=10000;
 427              temp=Data/1000;
 428              OLED_ShowChar(x+8,y,(temp+'0'),2);
 429           
 430              Data%=1000;
 431              temp=Data/100;
 432              OLED_ShowChar(x+16,y,(temp+'0'),2);
 433           
 434              Data%=100;
 435              temp=Data/10;
 436              OLED_ShowChar(x+24,y,(temp+'0'),2);
 437           
 438              Data%=10;
 439              temp=Data;
 440              OLED_ShowChar(x+32,y,(temp+'0'),2);
 441            }
 442            break;
 443            }
 444          }*/
 445          
 446          
 447          /*void OLED_ShowData_uchar(uint8_t x, uint8_t y, uint8_t dat,uint8_t TextSize)    //显示无符号char数据
 448          {
 449            uint8_t display_tab[4];
 450            display_tab[0]=dat/100+'0';
 451            display_tab[1]=dat/10%10+'0';
 452            display_tab[2]=dat%10+'0';
 453            //display_tab[3]='\n';
 454            OLED_ShowStr(x,y,display_tab,TextSize);
 455          }*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1592    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      57
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
